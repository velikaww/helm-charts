apiVersion: v1
data:
  sshd_config: |
    # -*- mode: conf -*-

    # Based on: https://github.com/hashbang/docker-gitolite

    # What ports, IPs and protocols we listen for
    Port         {{ .Values.ContainerPort }}
    Protocol     2
    TCPKeepAlive no


    # Privilege Separation is turned on,
    # but does not use “sandbox” (requires chroot)
    UsePrivilegeSeparation          yes

    # Logging.  The log is sent to stderr, and captured by Docker
    LogLevel                        VERBOSE

    # Authentication
    LoginGraceTime                  30
    StrictModes                     no     # Required because of the mode of the volume
    PermitRootLogin                 no
    AllowUsers                      svn

    # Disable things that don't make sense in this container
    PrintMotd                       no
    PrintLastLog                    no

    # Allow pubkey auth, without PAM support
    PubkeyAuthentication            yes
    AuthenticationMethods           publickey
    UsePAM                          no

    # Explicitely disable everything else
    PasswordAuthentication          no
    KbdInteractiveAuthentication    no
    RhostsRSAAuthentication         no
    HostbasedAuthentication         no
    KerberosAuthentication          no
    GSSAPIAuthentication            no
    RSAAuthentication               no

    # Disable extra features
    PermitTTY                       no
    AllowAgentForwarding            no
    PermitUserRC                    no
    AllowStreamLocalForwarding      no
    AllowTcpForwarding              no
    PermitTunnel                    no
    X11Forwarding                   no
    GatewayPorts                    no
    PermitOpen                      none
kind: ConfigMap
metadata:
  name: {{ include "app.cmp.sshd.name" . }}
  namespace: {{ .Release.Namespace }}
  {{- $labels := include "common.tplvalues.merge" ( dict "values" ( list .Values.configmap.sshd.labels .Values.commonLabels ) "context" . ) }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $labels "context" $ ) | nindent 4 }}
  {{- if or .Values.configmap.sshd.annotations .Values.commonAnnotations }}
  {{- $annotations := include "common.tplvalues.merge" ( dict "values" ( list .Values.configmap.sshd.annotations .Values.commonAnnotations ) "context" . ) }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $) | nindent 4 }}
  {{- end }}
